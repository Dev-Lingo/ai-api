package com.example.ollamaembeddingtest.ollama

import com.example.ollamaembeddingtest.core.model.embeded.Embeded
import com.example.ollamaembeddingtest.core.model.ollama.EmbeddingModel
import com.example.ollamaembeddingtest.core.model.project.Project
import com.example.ollamaembeddingtest.embeded.EmbededService
import com.example.ollamaembeddingtest.embeded.repository.EmbededLabelRepository
import com.example.ollamaembeddingtest.embeded.repository.EmbededQueryRepository
import com.example.ollamaembeddingtest.embeded.repository.EmbededRepository
import com.example.ollamaembeddingtest.embeded.repository.response.SimilarEmbeddingResponse
import com.example.ollamaembeddingtest.project.ProjectRepository
import com.example.ollamaembeddingtest.test.Loader
import kotlinx.coroutines.test.runTest
import org.springframework.ai.ollama.api.OllamaApi
import org.springframework.r2dbc.core.DatabaseClient
import reactor.core.publisher.Flux
import reactor.core.publisher.Mono
import reactor.kotlin.core.publisher.switchIfEmpty
import reactor.kotlin.core.publisher.toMono
import java.io.File

class OllamaServiceTest {
    private lateinit var projectRepository: ProjectRepository

    private lateinit var loader: Loader

    private lateinit var embededLabelRepository: EmbededLabelRepository

    private lateinit var embededQueryRepository: EmbededQueryRepository

    private lateinit var r2dbcDatabaseClient: DatabaseClient

    private lateinit var ollamaApi: OllamaApi

    private lateinit var embededService: EmbededService

    private lateinit var embededRepository: EmbededRepository

    private lateinit var ollamaService: OllamaService

    fun test2() {
        embededQueryRepository
            .findSimilarEmbeddings(EmbeddingModel.BGE_M3, arrayListOf())
            .subscribe {
                println(it)
            }
    }

    fun vectorQueryTest() {
        // 벡터를 문자열로 변환 (PostgreSQL ARRAY 형식)
        val model = EmbeddingModel.NOMIC_EMBED_TEXT
        // SQL 쿼리 작성
        val sql =
            """
            SELECT 
                id, model, value, embed_data <=> '[0.0013528368, 0.026030065, -0.1408027, -0.043986756, 6.187577E-4, 0.05891759, -0.022861337, -0.021237807, -0.06056973, 0.009045178, -0.0052780984, 0.06859879, 0.027564788, -0.009584989, 0.0209599, -0.029231522, -0.073757455, -0.005806231, -0.0052311514, 0.09729824, -0.060815085, 0.0028642353, -0.009789451, -0.06027863, 0.16396698, 0.013503438, 0.04021646, 0.0064934297, -0.045144457, -0.024726281, -7.7857554E-4, -0.02720205, -0.028999137, -0.008936021, -0.06471008, -0.03038258, 0.021041928, 0.003521796, 0.052450627, -0.015030144, 0.01737026, -0.036863, 0.0074037714, -0.028133458, -0.0061782007, -0.0013117301, 0.07613717, -0.0070557515, 0.09346455, -0.06641411, -0.047910787, 0.044804953, -0.007834851, -0.055820297, 0.01243371, -0.010750654, -0.014577248, 0.039763942, -0.01978612, 2.5905645E-4, 0.041048855, 0.015958926, -0.023797713, 0.02035081, 0.024432171, -0.036812954, 0.007120369, 0.050312202, 0.0050615496, -0.025910035, 0.06632716, 0.071013324, 0.026114296, 0.057654865, 0.052801836, -0.050796393, -0.012276772, -1.3825104E-4, -0.04570692, 0.05642292, 0.0028890956, 0.0414638, 0.09441057, -0.012977673, 0.056855734, 0.04333897, 0.007473447, 0.043618765, -0.0315011, 0.043499272, 0.056540985, 0.018635849, -0.021537844, 0.03529594, -0.059269123, 0.011362927, -0.020279733, 0.053412188, -0.026841478, -0.031789456, 0.030063178, -0.037300687, -0.021613993, -0.03062119, 0.011299124, 0.04819535, 0.0033486837, 8.751357E-4, -0.04969131, 0.023125734, -0.0429358, 0.076628014, -0.017753983, -0.0153763695, 0.011260568, -0.04116808, 0.024024347, -0.04145281, 0.011502064, -0.004528129, -0.049978748, 0.0074903322, -0.10067071, 0.049086988, 0.014084141, 0.048082363, -0.034482587, 0.012085829, -0.020550117, -0.050010417, 0.03606609, 0.0048141433, -0.0050077587, 0.0104858065, 0.0115968995, 0.03669636, -0.018589683, 0.027582923, -0.036896348, -0.021213692, -0.02907338, 0.0051199216, 0.004933736, -0.06840201, 0.0413769, -0.0018896629, 0.064304195, -0.005449365, -0.050524965, 0.01685611, 0.02036883, 0.008354292, 0.036215737, -0.010759879, 0.023747051, -0.07170807, -0.01380277, 0.014674429, -0.01596581, -0.0063155293, 0.02131956, 0.010227687, -0.02665154, 0.018527165, -0.016024228, -0.071433105, -0.009453631, 0.092640795, -0.009182785, 0.016411414, -0.07069406, 0.015005243, -0.004559737, -0.010625624, -0.016265381, 0.027390163, -0.052767806, -0.06614453, 0.00783633, -0.008440001, -0.033727854, -0.04059939, 0.09394679, 0.052816957, -0.051463224, -0.056620847, -0.06086265, 0.0045310524, -0.018128667, -0.04169704, -0.037263695, 0.042461403, -0.03219058, -0.014679721, -0.04508677, 0.006583057, 0.0013521583, 0.002197425, 0.015148203, -0.07195271, -0.05873429, 0.01083755, 0.0030092488, 0.025330868, -0.0037826586, 0.08047397, 0.010824945, 0.030005742, 0.01986888, -0.003978205, 0.056708593, 0.003413065, -0.011538207, -1.6152537E-4, 0.057728633, -0.09719309, -0.00879896, -0.029501377, -0.0013842974, -0.014684657, 0.008877414, -0.0026516556, -0.022133684, -0.02523373, 0.07447349, 0.055512913, -0.063620694, 0.015508928, 0.026567446, -0.005267264, -0.028655974, -0.12773615, -0.016072653, -0.0014533122, 0.03161263, 0.036464658, -0.031988442, 0.053382803, -0.011123011, 0.0016318058, -0.0034195995, 0.027833002, 0.005449644, -0.029472386, -0.0713727, 0.009383578, 0.009157793, 0.0058781756, 0.0035733185, 0.044622052, 0.019416653, 0.019706314, -0.006198282, 0.047286395, 0.081837945, 0.027862279, -0.02146478, 7.897826E-4, 0.01720183, -0.020336455, 0.009158469, -0.101731166, 0.043361712, -0.026568647, -0.014549622, -0.0041202456, -0.046276964, 0.018136349, 0.02680754, 0.012073204, 0.035941593, 0.010333659, -0.0063339076, 0.030087344, -0.021003531, -0.02251589, 0.022487778, 0.01842259, -0.047433842, 0.04771731, -0.015894081, -0.028579766, -0.04712121, -0.012279432, 0.053003684, 0.025328968, 0.03414407, 0.014914758, 0.01653016, 0.0338911, 0.016154753, -0.027953653, 0.0050562494, 0.05697505, -0.01875378, 0.020185217, -0.009995371, 0.025668444, 0.03429766, -0.03793282, 0.007908511, -0.011226624, 0.031212645, -0.009877335, -0.021116786, -0.027278526, 0.020573596, -0.025826924, 0.051136807, -0.039230444, -0.04673757, 0.028985864, 0.005375804, 0.019175338, -0.03909527, 0.001381546, 0.02736147, -0.004237244, 0.04795922, 0.024100421, 0.0035370772, -0.018874053, 0.0014554382, -0.05972299, -0.018772352, 0.06174311, -0.015794389, 0.020097269, 0.038083654, 8.01706E-4, -0.06296141, 0.036874488, 0.0050416035, 0.005415544, 0.06713393, 0.07767731, -0.02490581, -0.016342215, -0.023904707, 0.0304703, 0.024907218, -0.02112066, -0.029089434, -0.036527794, -0.012081917, 0.011467368, 0.0011427705, -0.004187021, -0.021984123, 0.028166186, -0.029906685, 0.0015831725, -0.047246233, -0.016196806, -0.0042173066, -0.024199892, 0.023406947, 0.012488513, 0.01993152, -0.04713757, 0.053049274, -0.009722271, 0.014927016, 0.033623666, 0.0014941999, 0.040931158, 0.03506651, -0.016326686, 0.028079173, 0.023718629, -0.051763706, -0.030275678, 0.01949293, 0.015720738, 0.01318403, 0.0062709157, -0.04593393, -0.03248529, -0.012112931, 0.039572865, -0.035754338, -0.0713795, 0.030565098, -0.016744731, 0.03591252, -0.016389044, 0.029917011, 0.007815608, -0.027665101, 0.016158072, -0.05087313, -0.04573097, -0.022735016, 0.007931464, -0.008758967, 0.010851957, 0.033514336, 0.045876518, 0.010783448, 0.03749296, 3.4625133E-4, 0.00598456, 0.013112639, -0.024748933, -0.0037531117, 0.023109121, -0.044085417, -0.04847242, -0.0073725493, -0.031764083, -0.018097728, 0.017910752, 0.02979662, -0.009526747, -0.005497718, 0.06485423, 0.06367636, -0.0048574787, -0.038199138, 0.01801607, 0.08329349, 0.06862964, -0.0047290237, -0.012569711, -0.037220538, 0.009838148, 0.0029015963, 0.042761546, 0.015497282, -0.031036183, 0.01377867, -0.008467653, 0.049421363, -0.018533178, 0.001636722, 0.0407141, 0.03032986, 0.047927327, 0.014133727, 0.0063729584, 0.06422936, -0.07239526, -0.01411157, -0.038395856, 0.013006676, 0.049246058, 0.07305887, -0.038604822, 0.0010819755, 0.0054069036, 0.038632177, -0.02088113, 8.2402263E-4, 0.048115104, 0.05112987, -0.044015788, -0.0031148554, -0.02254065, -0.02064549, 0.06359346, -0.01343295, 0.051825903, -0.039616454, 0.006243153, -0.0024948504, -0.006886906, 0.04068094, -0.03070791, 0.029535938, -0.013427165, -0.032846592, 0.039638527, 0.04884638, -0.043617394, 0.031610247, 0.032790676, -0.0060920822, 0.0048199077, 0.04874736, 0.010896231, 0.00913234, -0.0020971915, -0.026715146, -0.033290904, 0.017181544, 0.005042997, 0.014056178, 0.0039399695, 0.043165103, -0.05644201, 0.021017572, -0.038949113, 0.0057957764, 0.0068671363, -0.015899016, -0.010929813, -0.055030484, 0.02914298, 0.03338594, -0.012693685, 0.013512064, 0.019973548, -0.039927896, -0.009599033, 0.07158905, 0.0044219755, -0.014503512, -0.08797418, -0.073372275, 0.028630827, 0.011529346, -0.00863587, 0.034322254, 0.01183638, -0.016110074, -0.014568789, 0.007470903, -0.06955066, -0.07586218, 0.015379452, 0.04682322, -0.011408105, -0.037461028, -0.0039767018, -0.0065577645, -0.03466004, -0.006762747, -0.05260845, 0.040096104, 0.0029689411, 0.017503522, 0.0010735549, -0.03668847, -0.01469977, -0.00831804, -0.06945925, 0.036207438, 0.004205012, 0.019488426, -0.025864959, 0.009789421, 0.040058453, -0.037818994, -0.008595202, 0.019881142, 0.028253527, -0.03581171, -0.025428914, -0.035053357, -0.03730148, 0.0060662567, -0.03491977, 0.012771105, 0.0057544364, -0.0021784885, -0.031982817, -0.03750309, -0.0054584295, 0.014031428, -0.009946495, 0.024726745, -0.02173945, 0.018583065, -0.007645548, 0.046840843, -0.040807243, -0.03690166, 0.015703544, -5.2085164E-4, 0.090673484, -0.024936479, -0.07783653, 0.050178714, 0.018587181, -0.025434019, -0.019206306, -0.012544969, -0.016930263, -0.036836606, -0.02931811, -0.029410051, -0.024905756, -0.05964721, -0.0019213364, -0.029415762, 0.03722504, -0.009789107, -0.0050905547, 0.07471306, 0.0045703687, 0.0130147375, 0.017697494, -0.013690652, 0.012916218, 0.021845577, 0.029591931, 0.0022789326, -0.06323131, 0.013161004, -0.020272223, 0.021810122, 0.0381699, -0.04428091, -0.0024765702, -0.0041395575, 0.0798841, -0.03343078, 0.043412816, -0.032703128, -0.03170776, 0.054409713, 0.04125174, -0.01866887, -0.01958452, 0.04071133, -0.03640414, 0.04809349, -0.03896585, -0.035850625, -0.032577444, -0.0070942277, -8.922806E-4, 0.037003145, 0.032055385, 0.03577855, 0.03312411, -0.0690767, -0.042310867, 0.0071360813, 0.010071392, -0.034094695, 0.020970397, -0.073691964, -0.023678703, -0.032581944, 0.019380223, 0.005192415, 0.017487947, 0.012150224, 0.066507325, 0.009141452, -0.029785983, 0.03049026, 0.014099754, 0.07206183, -0.032462366, -0.014371903, 0.056704927, 0.088477895, -0.037723545, 0.0466912, 0.027724113, 0.028058955, 0.017048577, 0.0014217654, 0.03315921, 0.031586885, -0.043477725, -0.03755337, -0.012106798, -0.030983074, -0.009354055, 0.009639687, 0.04916148, -0.021618675, -0.032331944, -0.010871494, -0.018041018, -0.074898176, -0.007016702, 0.033936825, 0.021868007, 0.05235941, -0.034390703, -0.038346868, 0.035511576, 0.037052613, 0.012967474, -0.0034468984, -0.042804915, -0.015280554, 0.0053312634, 0.036967937, -4.7652604E-4, 0.024728406, -0.036208946, 0.04267276, -0.015392581, 0.02374248, -0.044938363, -0.0392838, -0.0044020093, -0.008286964, 0.0014430769, -0.017137367, 0.009159782, -0.035746604, 0.0067122714, -0.03772243, 0.08245543, -0.0165154, 0.003395408, -0.038580604, 0.047048166, -0.09476326, -0.035317995, 0.0061559468, 0.011511633, -0.00803625, 0.035983574, -0.0031148037, -0.010230547, 0.016705707, 0.098899834, 0.03960089, 0.037856992, -0.041462876, -0.06113524, -0.008727674, 0.06916406, 0.043250833, 0.020282893, -0.05040145, 0.016670836, -0.033393465, 0.0033943295, -0.015711669, -0.007938622, 0.014510749, -0.059332207, 0.012399505, -0.03090851, -0.016920066, -0.033093076, 0.023746226, -0.0066862586, -0.0570212, -0.047108773, 0.0301878, -0.022139153, -0.011537369, 0.0072689233, 0.005347557, 0.02645276, 0.007313374, -0.010700719, -0.0108386995, 0.05479502, -0.0022946536, -0.0218306, -0.028138204, -0.033391308, 0.004054748, -0.0051765526, 0.014014833, -0.0034314266, 0.020847382, 0.03220579, 0.043326583, 0.018619856, 0.019119283, -0.0033370026, 0.03638047, -0.026476048, -0.031392798, -0.0104275355, -0.051205996, -0.02635605]' AS similarity
            FROM 
                public.embeded
            WHERE 
                model = 'NOMIC_EMBED_TEXT'
            ORDER BY 
                similarity ASC
            LIMIT 10
            """.trimIndent()

        // DatabaseClient를 사용하여 쿼리 실행
        r2dbcDatabaseClient
            .sql(sql)
            .map { row ->
                SimilarEmbeddingResponse(
                    id = row.get("id", Long::class.java)!!,
                    model = row.get("model", String::class.java)!!,
                    value = row.get("value", String::class.java)!!,
                    similarity = row.get("similarity", Double::class.java)!!,
                )
            }.all()
            .subscribe {
                println(it)
            }
    }

    fun getFile() {
        val file = File("src/main/resources/한국어 학습용 어휘 목록.xls")
        val file2 = File("src/main/resources/한국어 학습용 어휘 목록.xls")

        val model = EmbeddingModel.NOMIC_EMBED_TEXT
        val model2 = EmbeddingModel.BGE_M3

        val embededGroupId = 1

        val flux: Flux<Embeded> = loader.initData(file.inputStream(), model, embededGroupId)
        val flux2: Flux<Embeded> = loader.initData(file2.inputStream(), model2, embededGroupId)

        Flux.merge(flux, flux2).subscribe()
    }

    fun test() {
        runTest {
            Flux
                .error<RuntimeException>(RuntimeException("!!!"))
                .doOnError {
                    println(it)
                }.subscribe()
        }
    }

    fun test3() {
//        projectRepository
//            .findAllById(listOf(1, 2, 3, 4, 5))
//            .doOnNext {
//                println(it)
//            }.flatMap { project ->
//                project?.toMono() ?: Mono.error(RuntimeException("dd"))
//            }.doOnError {
//                println(it)
//                Project(1, "err")
//            }.subscribe()

        projectRepository
            .findById(2)
            .switchIfEmpty {
                println("thenEmpty :")
                Mono.error(RuntimeException("!!!"))
            }.onErrorResume {
                println("onError:")
                Project(null, "").toMono()
            }.subscribe {
                println("sub : $it")
            }
    }
}
